

server.modules = (
        "mod_access",
#        "mod_accesslog",
        "mod_alias",
        "mod_auth",
#        "mod_compress",
        "mod_redirect",
        "mod_rewrite",
        "mod_fastcgi",
        "mod_status",
        "mod_cgi",
#       "mod_magnet",
)

#### bind to port (default: 80)
#server.port                 = 81
server.document-root        = "/var/www"
#server.upload-dirs          = ( "/var/cache/lighttpd/uploads" )
#server.upload-dirs          = ( "/var/www/tmp" )

# upload-dirs needs to be /tmp for permission
server.upload-dirs          = ( "/tmp" )
server.errorlog             = "/var/log/lighttpd/error.log"
server.pid-file             = "/var/run/lighttpd.pid"
server.username             = "www-data"
server.groupname            = "www-data"
#### enable symlinks
server.follow-symlink    = "enable"

#### performance options (aggressive timeouts)
#server.max-keep-alive-requests = 6
#server.max-keep-alive-idle = 15
#server.max-read-idle     = 15
#server.max-write-idle    = 15

## number of child worker processes to spawn (0 for lightly loaded sites)
#server.max-worker      = 0

## number of file descriptors (leave off for lighty loaded sites)
# server.max-fds         = 512

## maximum concurrent connections the server will accept (1/2 of server.max-fds)
# server.max-connections = 256

## single client connection bandwidth limit in kilobytes (0=unlimited)
#connection.kbytes-per-second = 0

## global server bandwidth limit in kilobytes (0=unlimited)
#server.kbytes-per-second = 0

#### limit request method "POST" size in kilobytes (KB)
#server.max-request-size  = 1

#### disable multi range requests
server.range-requests    = "disable"



#### disable ssl if not needed
ssl.engine               = "disable"


#### enable debugging (un-comment to debug server problems)
#debug.log-request-header   = "enable"
#debug.log-response-header  = "enable"
#debug.log-request-handling = "enable"
#debug.log-file-not-found   = "enable"

#### enable statistics
status.status-url = "/server-status"
status.enable-sort = "enable"
status.config-url = "/server-config"
status.statistics-url = "/server-stats"



# Alias for directories
alias.url += (
        "/phpmyadmin" => "/usr/share/phpmyadmin",
)

# Disallow access to libraries
$HTTP["url"] =~ "^/phpmyadmin/libraries" {
    url.access-deny = ( "" )
}
$HTTP["url"] =~ "^/phpmyadmin/setup/lib" {
    url.access-deny = ( "" )
}

# stop access to dot files
$HTTP["url"] =~ "(/\.|\.\.)" {
        url.access-deny = ( "" )
}

# stop access to the following directories
$HTTP["url"] =~ "^.*/(include|data|util|cgi)($|/)" {
        url.access-deny = ( "" )
}


# Limit access to setup script
$HTTP["url"] =~ "^/phpmyadmin/setup" {
        auth.backend = "htpasswd"
        auth.backend.htpasswd.userfile = "/etc/phpmyadmin/htpasswd.setup"
        auth.require = (
                "/" => (
                        "method" => "basic",
                        "realm" => "phpMyAdmin Setup",
                        "require" => "valid-user"
                )
        )
}

index-file.names            = ( "index.php", "index.html",
                                "index.htm", "default.htm",
                               " index.lighttpd.html" )


url.access-deny = ( "~", ".inc", ".htaccess" )
#####    server.error-handler-404 = "/error.php"
static-file.exclude-extensions = ( ".php", ".pl", ".fcgi", ".cgi"  )

#include_shell "/usr/share/lighttpd/use-ipv6.pl"

# dir listing only for these directories
dir-listing.encoding  = "utf-8"
#$HTTP["url"] !~  "^.*/(include|data|util|images|scripts)($|/)" {
$HTTP["url"] =~ "^(.*/photos|/)($|/)" {
	server.dir-listing = "enable"
}
dir-listing.hide-dotfiles   = "enable"

#compress.cache-dir          = "/var/cache/lighttpd/compress/"
#compress.filetype           = ( "application/x-javascript", "text/css", "text/html", "text/plain" )

include_shell "/usr/share/lighttpd/create-mime.assign.pl"
include_shell "/usr/share/lighttpd/include-conf-enabled.pl"

# CGI setup
server.breakagelog = "/var/log/lighttpd/breakage.log" 
#$PHYSICAL["existing-path"] =~ "^/var/www/mk3/cgi-bin/" {
#Note: make sure that mod_alias is loaded if you use this:
alias.url += ( "/cgi-bin" => "/var/www/mk3/cgi" )
$HTTP["url"] =~ "^/cgi-bin" {
        cgi.assign = ( "" => "" )
#   cgi.execute-all = "enable" 
   cgi.execute-x-only = "enable"
}

# fastcgi.debug = 1
fastcgi.server = (".php" => (
        ("bin-path" => "/usr/bin/php5-cgi",
        "broken-scriptfilename" => "enable",
#       "fix-root-scriptname" => "enable",
        "max-procs" => 1,
        "min-procs" => 1,
#        "mode" => "responder",
#        "docroot" => "/var/www",
#        "check-local" => "disable",
        "bin-environment" => (
                "PHP_FCGI_CHILDREN" => "4",
                "PHP_FCGI_MAX_REQUESTS" => "10000",
                "PATH" => "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
        ),
        "bin-copy-environment" => ( "SHELL", "USER" ),
        "socket" => "/tmp/lightphp." + var.PID + ".socket",
        )))



#alias.url += (
#        "/recess" => "/var/www/rest",
#)

# "deny from all" directories
#$HTTP["url"] =~ "^/recess/(recess|data|apps|plugins)/" {
#       url.access-deny = ( "" )
#}


$HTTP["host"] =~ "^(10\.8\.|www\.)" {
#       accesslog.filename = "/var/log/lighttpd/access.log"
        server.document-root = "/var/www"
# RewriteRule ^([^.]+)$ $1.html [QSA]
# RewriteCond %{REQUEST_FILENAME} !-f
# RewriteRule ^(.*)$ bootstrap.php [QSA,L]

#       url.rewrite += (
#         "^/rest/([^.\?]+)(?:\?(.*))?" => "/rest/$1.html$2"
#         "^/rest/([^.\?]+)(\?.*)?$" => "/rest/$1.html$2"
#       )
        url.rewrite += (
#         "^/rest/(\?.+)?$" => "/rest/bootstrap.php$1",
          "^/rest/index.php(\?.+)?$" => "/rest/bootstrap.php$1",
#         "^/rest/([^\?]+)(.*)?$" => "/rest/bootstrap.php$2"
        )

        url.rewrite-if-not-file += (
          "^/rest/([^\?]+)(.*)?$" => "/rest/bootstrap.php$2"
        )

#magnet.attract-raw-url-to = ( "/etc/lighttpd/rwraw.lua" )
#        $HTTP["url"] =~ "^/rest/" {
#                magnet.attract-physical-path-to = ( "/etc/lighttpd/rwphy.lua" )
#        }


 url.rewrite += (
                "^[^/](.*)/public/(.*)$" => "/$1/public/$2"
        )

# need to test this with the url selection
        $HTTP["url"] =~ "^/(rest|qvantage)/" {
                server.error-handler-404 = "/rest/bootstrap.php"
        }
# we should probably gzip all the rest js
# $HTTP["url"] =~ "(README|ChangeLog|\.txt)\.gz$" {
# $HTTP["url"] =~ "(\.js\.gz$" {
#    setenv.add-response-header  = ( "Content-Encoding" => "gzip")
#    mimetype.assign = ("" => "text/plain" )
#  }



}

$HTTP["host"] =~ "qvantage.svn" {
        server.document-root = "/home/gopher"
}

